---
- name: Playbook pour l'installation locale de nginx
  hosts: localhost
  connection: local
  become: true

  tasks:
    - name: Installation de nginx
      apt:
        name: nginx
        state: present 
        update_cache: true

    - name: Nettoyage du repertoire /var/www/html
      file:
        path: "{{ item }}"
        state: absent
      with_fileglob:
        - "/var/www/html/*.html"
    - name: Changer les permissions
      file:
        path: "/var/www/html/"
        owner: sarrenne
        recurse: true
        state: directory
        
- name: Playbook fetch - pour récupérer des facts de nos noeuds
  hosts: all
  become: true

  tasks:
    - name: module fetch
      fetch:
        src: /etc/hosts # required. The file on the remote system to fetch. This I(must) be a file, not a directory. Recursive fetching may be supported in a later release.
        dest: /var/www/html/hosts_{{ ansible_hostname }}.txt  # required. A directory to save the file into. For example, if the I(dest) directory is C(/backup) a I(src) file named C(/etc/profile) on host C(host.example.com), would be saved into C(/backup/host.example.com/etc/profile). The host name is based on the inventory name.
        fail_on_missing: True # not required. When set to C(yes), the task will fail if the remote file cannot be read for any reason. Prior to Ansible 2.5, setting this would only fail if the source file was missing. The default was changed to C(yes) in Ansible 2.5.
        flat: true # not required. Allows you to override the default behavior of appending hostname/path/to/file to the destination. If C(dest) ends with '/', it will use the basename of the source file, similar to the copy module. This can be useful if working with a single host, or if retrieving files that are uniquely named per host. If using multiple hosts with the same filename, the file will be overwritten for each host.